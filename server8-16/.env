# Server Configuration
PORT='3000'
NODE_ENV='development'

# Database Configuration
DB_HOST='101.36.113.47'
DB_USER='root'
DB_PASSWORD='Bandot@2022_'
DB_NAME='multiagent_platform'

# JWT Configuration
JWT_SECRET='c21a7afd5c4c0a73d59dcc9e70f8ba50dcb50c4cca018f573bd7fd45ffe2107185b4e1decbd60a436ed569ae5c7241975aed7670731e80fdeeabc134219a00b4'

# OpenAI Configuration
OPENAI_API_KEY=''
PRIVATE_KEY=''
# Blockchain Configuration
# BLOCKCHAIN_NETWORK_URL='https://endpoints.omniatech.io/v1/bsc/testnet/public'
ETHEREUM_RPC_URL='https://endpoints.omniatech.io/v1/bsc/testnet/public'
CONTRACT_ADDRESS='0x85347aD2EF4A138a6D023b443EDEeC384cB91393'
CONTRACT_ABI=[{ "anonymous": false, "inputs": [ { "indexed": true, "internalType": "uint256", "name": "agentId", "type": "uint256" }, { "indexed": false, "internalType": "string", "name": "name", "type": "string" }, { "indexed": false, "internalType": "address", "name": "owner", "type": "address" } ], "name": "AgentRegistered", "type": "event" }, { "inputs": [], "name": "agentCount", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "name": "agents", "outputs": [ { "internalType": "string", "name": "name", "type": "string" }, { "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "string", "name": "metadataURI", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "_agentId", "type": "uint256" } ], "name": "getAgent", "outputs": [ { "internalType": "string", "name": "", "type": "string" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "string", "name": "_name", "type": "string" }, { "internalType": "string", "name": "_metadataURI", "type": "string" } ], "name": "registerAgent", "outputs": [], "stateMutability": "nonpayable", "type": "function" }]

# IPFS Configuration
IPFS_HOST='ipfs.infura.io'
IPFS_PORT='5001'
IPFS_PROTOCOL='https'
